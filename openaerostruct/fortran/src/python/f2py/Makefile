MAIN_DIR = ../../..
COMMON_FILE = $(MAIN_DIR)/common.mk
RULES_FILE  = $(MAIN_DIR)/rulesSources.mk
include ${COMMON_FILE}
include ${RULES_FILE}

LINKER_ALL_FLAGS = $(FF90_FLAGS) -L$(LIBDIR) -loas $(LINKER_FLAGS)

PYTHON_OBJECTS = fortranobject.o \
	          OAS_APImodule.o \
						OAS_API-f2pywrappers2.o

default: all

all:

# Generate Python include directory
	$(eval PYTHON_INCLUDES = $(shell $(PYTHON-CONFIG) --includes))
	 @echo "#------------------------------------------------------#"
	 @echo Python Include Flags $(PYTHON_INCLUDES)
	 @echo "#------------------------------------------------------#"

# Generate Numpy include directory
	$(eval NUMPY_INCLUDES = $(shell $(PYTHON) -c 'from __future__ import print_function; import numpy; print(numpy.get_include())'))
	 @echo "#------------------------------------------------------#"
	 @echo Numpy Include Directory: $(NUMPY_INCLUDES)
	 @echo "#------------------------------------------------------#"

# Generate f2py root directory
	$(eval F2PY_ROOT = $(shell $(PYTHON) get_f2py.py))
	 @echo "#------------------------------------------------------#"
	 @echo f2py root directory: $(F2PY_ROOT)
	 @echo "#------------------------------------------------------#"

#       need to have f2py_f2cmap in this folder....
	cp f2py_f2cmap.ref .f2py_f2cmap

	$(F2PY) OAS_API.pyf
	@echo " "
	$(CC) $(CC_FLAGS) $(PYTHON_INCLUDES) -I$(NUMPY_INCLUDES) \
	-I$(F2PY_ROOT)/src -c OAS_APImodule.c

	$(CC) $(CC_FLAGS) $(PYTHON_INCLUDES) -I$(NUMPY_INCLUDES) -c \
	$(F2PY_ROOT)/src/fortranobject.c -o fortranobject.o

	# Compile fortran wrappers generated by f2py
	$(FF90) $(FF90_FLAGS) -I$(MODDIR) -c OAS_API-f2pywrappers2.f90

	$(FF90) $(SO_LINKER_FLAGS) $(PYTHON_OBJECTS) $(LINKER_ALL_FLAGS) -o OAS_API.so
	$(PYTHON) importTest.py
	cp OAS_API.so ../../..

# Clean up temporary files
	-rm *.o
	-rm *.c
	-rm .f2py_f2cmap
clean:
	@echo "        Making clean in f2py... "
	rm -f $(MAKE_CLEAN_ARGUMENTS)
